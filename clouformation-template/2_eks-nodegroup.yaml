AWSTemplateFormatVersion: '2010-09-09'
Description: 'Amazon EKS - Node Group - Released 2018-08-30'

Parameters:

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

  AmiType:
    Description: AL2_x86_64 | AL2_x86_64_GPU
    Default: AL2_x86_64
    Type: String

  NodeInstanceType:
    Type: String
    Default: t3.small

  NodeGroupMinSize:
    Type: Number
    Description: Minimum size of Node Group.
    Default: 1

  NodeGroupDesiredSize:
    Type: Number
    Description: Desired size of Node Group.
    Default: 2

  NodeGroupMaxSize:
    Type: Number
    Description: Maximum size of Node Group.
    Default: 3

  NodeVolumeSize:
    Type: Number
    Description: Node volume size
    Default: 20

  EKSClusterName:
    Description: EKS Cluster Name
    Type: String
  
  EKSVersion:
    Default: 1.16
    Type: String

  ControlPlaneSecurityGroup:
    Description: The security group of the cluster control plane.
    Type: AWS::EC2::SecurityGroup::Id

  WorkerNodeSSHSecurityGroup:
    Description: The security group of the cluster control plane.
    Type: AWS::EC2::SecurityGroup::Id

  VpcId:
    Description: The VPC of the worker instances
    Type: AWS::EC2::VPC::Id

  EKSSubnets:
    Description: The subnets where workers can be created.
    Type: List<AWS::EC2::Subnet::Id>
  
  NodeSubnets:
    Description: The subnets where workers can be created.
    Type: List<AWS::EC2::Subnet::Id>

  DBName:
    Type: String
    Default: postgres
  
  DBInstanceClass:
    Type: String
    Default: db.t2.micro

  Engine:
    Type: String
    Default: postgres

  EngineVersion:
    Type: String
    Default: 11.6

  MasterUsername:
    Type: String
    Default: postgres

  MasterUserPassword:
    Type: String
    Default: postgres

  DBSecurityGroup:
    Type: String
    Description: DB Security Groups ARN

  DatabaseSubnetGroup:
    Type: String
    Description: Database Subnet Group ARN

  DatabaseDeploy: 
    Description: Database Deploy specify.
    Default: false
    Type: String
    AllowedValues: 
      - true
      - false
    ConstraintDescription: must specify true or false.

Conditions:
  CreateDatabaseResources: !Equals [ !Ref DatabaseDeploy, true ]

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "EKS Cluster"
        Parameters:
          - EKSClusterName
          - EKSVersion
          - ControlPlaneSecurityGroup
      -
        Label:
          default: "Worker Node Configuration"
        Parameters:
          - AmiType
          - EKSNodeGroupName
          - NodeInstanceType
          - NodeGroupMinSize
          - NodeGroupDesiredSize
          - NodeGroupMaxSize
          - NodeVolumeSize
          - KeyName
          - WorkerNodeSSHSecurityGroup
      -
        Label:
          default: "Worker Network Configuration"
        Parameters:
          - VpcId
          - EKSSubnets
          - NodeSubnets
      - 
        Label:
          default: "Database"
        Parameters:
          - DatabaseDeploy
          - DBName
          - DBInstanceClass
          - Engine
          - EngineVersion
          - MasterUsername
          - MasterUserPassword
          - DBSecurityGroup
          - DatabaseSubnetGroup

Resources:

  EksClusterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
      
  EKSCluster:
    Type: AWS::EKS::Cluster
    Properties: 
      Name: !Ref EKSClusterName
      Version: !Ref EKSVersion
      RoleArn: !GetAtt EksClusterRole.Arn
      ResourcesVpcConfig: 
        SecurityGroupIds:
          - !Ref ControlPlaneSecurityGroup
        SubnetIds: !Ref EKSSubnets

  NodeInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
      - !Ref NodeInstanceRole

  AutoScalePolicies:
    Type: "AWS::IAM::Policy"
    Properties:
      PolicyName: !Sub "AutoScale-Policy-${AWS::StackName}"
      Roles:
        -
          Ref: NodeInstanceRole
      PolicyDocument: 
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - autoscaling:DescribeAutoScalingGroups
          - autoscaling:DescribeAutoScalingInstances
          - autoscaling:DescribeLaunchConfigurations
          - autoscaling:DescribeTags
          - autoscaling:SetDesiredCapacity
          - autoscaling:TerminateInstanceInAutoScalingGroup
          Resource: "*"

  NodeInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    
  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    DependsOn: 
      - EKSCluster
    Properties:
      ClusterName: !Ref EKSClusterName
      AmiType: !Ref AmiType
      NodeRole: !GetAtt NodeInstanceRole.Arn
      DiskSize: !Ref NodeVolumeSize
      InstanceTypes: 
        - !Ref NodeInstanceType
      ScalingConfig:
        MinSize: !Ref NodeGroupMinSize
        DesiredSize: !Ref NodeGroupDesiredSize
        MaxSize: !Ref NodeGroupMaxSize
      Subnets: !Ref NodeSubnets
      RemoteAccess:
        Ec2SshKey: !Ref KeyName
        SourceSecurityGroups: 
          - !Ref WorkerNodeSSHSecurityGroup
  
  DBPostgreSQL:
    Condition: CreateDatabaseResources
    Type: AWS::RDS::DBInstance
    Properties: 
      DBInstanceIdentifier: demo-postgres
      DBName: !Ref DBName
      AllocatedStorage: 20
      DBInstanceClass: !Ref DBInstanceClass
      StorageType: gp2
      Engine: !Ref Engine
      EngineVersion: !Ref EngineVersion
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      PubliclyAccessible: true
      Tags: 
        - Key: Name
          Value: Demo RDS PostgreSQL
      VPCSecurityGroups: 
        - !Ref DBSecurityGroup
      DBSubnetGroupName: !Ref DatabaseSubnetGroup

Outputs:
  NodeInstanceRole:
    Description: The node instance role
    Value: !GetAtt NodeInstanceRole.Arn